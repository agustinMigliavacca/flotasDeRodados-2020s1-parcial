import dependencia.*
import traffic.*
import rodados.*

test "dependencias" {

		const deportes = new Dependencia()
		
		const cultura = new Dependencia()
		
		deportes.cuantosEmpleados(45)
		cultura.cuantosEmpleados(31)	
		const cachito = new ChevroletCorsa()
		cachito.nColor("rojo")
		const ernes = new ChevroletCorsa()
		ernes.nColor("verde")
		const pipo = new ChevroletCorsa()
		pipo.nColor("azul")
		const kwid = new RenaultKwid()
		const especial = new AutosEspeciales()
		especial.nPeso(1200)
		especial.nVelocidadMaxima(160)
		especial.nCapacidad(5)
		especial.nColor("beige")
		deportes.agregarAFlota(cachito)
		deportes.agregarAFlota(pipo)
		deportes.agregarAFlota(ernes)
		kwid.ponerGas(true)
		deportes.agregarAFlota(kwid)
		deportes.agregarAFlota(especial)
		
		
		cultura.agregarAFlota(cachito)
		kwid.ponerGas(true)
		cultura.agregarAFlota(kwid)
		const kwid1 = new RenaultKwid()
		kwid1.ponerGas(true)
		cultura.agregarAFlota(kwid1)
		const kwid2 =  new RenaultKwid()
		kwid2.ponerGas(false)
		cultura.agregarAFlota(kwid2)
		trafic.ponerDentro(interiorPopular)
		trafic.ponerMotor(bataton)
		cultura.agregarAFlota(trafic)
		
		assert.notThat(cultura.estaBienEquipada())
		assert.that(deportes.estaBienEquipada())
		assert.equals("beige", deportes.colorDelRodadoMasRapido())
		assert.equals("rojo", cultura.colorDelRodadoMasRapido())
		assert.notThat(cultura.esGrande())
		assert.that(deportes.esGrande())
		assert.equals(5, cultura.capacidadFaltante())
		assert.equals(25, deportes.capacidadFaltante())
		assert.equals(10, cultura.capacidadTotalEnColor("azul"))
		assert.equals(4, deportes.capacidadTotalEnColor("rojo"))
		assert.equals(6450, deportes.pesoTotalFlota())
		assert.equals(11000, cultura.pesoTotalFlota())
	
		
}
